<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- Connection settings -->
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:5433/grtiming2</property>
        <property name="hibernate.connection.username">postgres</property>
        <property name="hibernate.connection.password">pgadmin</property>

        <!-- Hibernate supports several strategies for schema generation, each serving a different purpose:
            none: Disables schema generation.
            validate: Validates the existing schema against the entity mappings. If there are discrepancies, an error is thrown.
            update: Updates the existing schema to match the entity mappings. This can add new columns or tables but won't remove existing ones.
            create: Creates the schema every time the application starts, dropping any existing schema.
            create-drop: Similar to create, but also drops the schema when the application shuts down.
        -->
        <property name="hibernate.hbm2ddl.auto">update</property>

        <!-- Print executed SQL to stdout -->
        <property name="hibernate.show_sql">true</property>
        <property name="hibernate.format_sql">true</property>

        <!-- Annotated entity classes -->
        <mapping class="se.rich.grtiming2.system.RaceEvent" />
        <mapping class="se.rich.grtiming2.system.Race" />
        <mapping class="se.rich.grtiming2.system.User" />
        <mapping class="se.rich.grtiming2.system.Address"/>
        <mapping class="se.rich.grtiming2.system.Participant"/>
    </session-factory>
</hibernate-configuration>